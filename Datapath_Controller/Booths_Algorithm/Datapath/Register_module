module register_file (
    input clk,
    input reset,
    input [7:0] M_in,      // Multiplicand (M)
    input [7:0] Q_in,      // Multiplier (Q)
    input Q_1_in,          // Previous Q (Q-1)
    input load,            // Load control for registers
    output reg [7:0] M,    // Multiplicand
    output reg [7:0] Q,    // Multiplier
    output reg Q_1         // Previous Q (Q-1)
);

    always @(posedge clk or posedge reset) begin
        if (reset) begin
            M <= 8'b0;
            Q <= 8'b0;
            Q_1 <= 1'b0;
        end else if (load) begin
            M <= M_in;
            Q <= Q_in;
            Q_1 <= Q_1_in;
        end
    end
endmodule

